{"version":3,"sources":["webpack:///webpack/bootstrap cd4b43c89c344358e193","webpack:///./src/Main.js","webpack:///./src/Bot.js","webpack:///external \"util\"","webpack:///./src/IO.js","webpack:///external \"fs\"","webpack:///external \"discord.io\"","webpack:///external \"path\""],"names":["bot","start","Discord","require","util","path","Bot","io","getAllJsonValue","CONF_FILE","then","console","log","conf","Client","token","autorun","on","username","id","setPresence","status","game","name","user","userID","channelID","message","evt","substring","args","split","cmd","splice","sendMessage","to","typing","getUser","event","d","user_id","channel_id","channel","getChannel","textChannel","nick","catch","error","servers","channels","guild_id","members","fs","IO","Promise","resolve","reject","readFile","file","data","json","JSON","parse","getJsonValue","key","updateJson","value","oldConf","write","stringify","writeFile","ls","readdirSync","__dirname","forEach"],"mappings":"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","file":"harold.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cd4b43c89c344358e193","import Bot from './Bot.js';\n\nconst bot = new Bot();\n\nbot.start();\n\n\n\n// WEBPACK FOOTER //\n// ./src/Main.js","const Discord = require('discord.io');\nconst util = require('util');\nconst path = require('path');\nimport IO from './IO';\n\nclass Bot {\n\n  constructor() {\n    this.io = new IO();\n    this.CONF_FILE = './conf.json';\n  }\n\n  start = () => {\n    this.io.getAllJsonValue(this.CONF_FILE)\n    .then(conf => {\n\n      console.log(conf);\n      /**\n      * initialises the bot into the server\n      */\n      this.bot = new Discord.Client({\n        token: conf.token,\n        autorun: true,\n      });\n\n      /**\n      * waits for the bot to be connected to the server\n      */\n      this.bot.on('ready', () => {\n        // console.log(require('util').inspect(this.bot.channels['366395988601995284'], { depth: null }));\n        console.log('Logged in as %s - %s\\n', this.bot.username, this.bot.id);\n        this.bot.setPresence({\n          status: 'online', // TODO move this to conf\n          game: {\n            name: 'with little cats' // TODO move this to conf later\n          }\n        });\n      });\n\n      /**\n      * checks each message to see if they are commands or anything else of interest\n      */\n      this.bot.on('message', function (user, userID, channelID, message, evt) {\n        // Listen for messages that will start with `!`\n        if (message.substring(0, 1) == '!') {\n          var args = message.substring(1).split(' ');\n          var cmd = args[0];\n\n          args = args.splice(1);\n          switch(cmd) {\n            // !ping\n            case 'ping':\n            this.bot.sendMessage({\n              to: channelID,\n              message: 'Pong!',\n              typing: true\n            });\n            break;\n            default:\n            this.bot.sendMessage({\n              to: channelID,\n              message: 'This is not the command you are looking for *mystical hand wave*',\n              typing: true\n            });\n            break;\n          }\n        }\n      });\n\n      /**\n      * monitors the users presence in the server, and what they are doing\n      */\n      // this.bot.on('presence', ( user, userID, status, game, event ) => {\n      //   // console.log('user => ' + user);\n      //   // console.log('userID => ' + userID);\n      //   // console.log('status => ' + status);\n      //   // console.log(util.inspect(game));\n      //   // console.log(util.inspect(event));\n      //\n      //   // send a message in the text chat\n      //   var msg;\n      //   // check if they are playing or aren't playing a game\n      //   if (game === null) {\n      //     if (event.d.status === 'offline') {\n      //       msg = event.d.nick + ' has left the server, may we remember them.';\n      //     }\n      //   } else {\n      //     msg = event.d.nick + ' has just started playing ' + game.name;\n      //   }\n      //   this.bot.sendMessage({\n      //     to: conf.textChannel,\n      //     message: msg\n      //   });\n      // });\n\n      // voiceStateUpdate has an object\n      /*\n      d: {\n      user_id: '11111111111111111111111',\n      suppress: false,\n      session_id: 'e2f2798e5f0b13542e7a41c626182820',\n      self_video: false,\n      self_mute: true,\n      self_deaf: true,\n      mute: false,\n      guild_id: '228814605923647488',\n      deaf: false,\n      channel_id: '361453424249929728'\n      }\n\n      channel_id will be null if the user disconnected\n      otherwise it will update to the new channel the user connected to\n      */\n\n      this.bot.on('voiceStateUpdate', event => {\n        let user = this.getUser(event.d.user_id, event.d.channel_id);\n        let channel = this.getChannel(event.d.channel_id);\n        if (event.d.channel_id) {\n          this.bot.sendMessage({\n            to: conf.textChannel,\n            message: `${user.nick} connected to ${channel.name}`\n          });\n        }\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  } // end start\n\n  getUser = (userID, channelID) => {\n    return this.bot.servers[this.bot.channels[channelID].guild_id].members[userID];\n  }\n\n  getChannel = channelID => {\n    return this.bot.channels[channelID];\n  }\n\n}\n\n\nexport default Bot;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Bot.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 2\n// module chunks = 0","const fs = require('fs');\n\nclass IO {\n\n  getAllJsonValue = file => {\n    return new Promise((resolve, reject) => {\n      fs.readFile(file, 'utf8', (error, data) => {\n        if (error) {\n          reject(error);\n        }\n\n        let json = JSON.parse(data);\n\n        resolve(json);\n\n      });\n    });\n  }\n\n  getJsonValue = (file, key) => {\n    return new Promise((resolve, reject) => {\n      fs.readFile(file, 'utf8', (error, data) => {\n        if (error) {\n          reject(error);\n        }\n\n        let json = JSON.parse(data);\n\n        // console.log(require('util').inspect(json, { depth: null }));\n\n        if (json[key]) {\n          resolve(json[key]);\n        } else {\n          reject('undefined');\n        }\n      });\n    });\n\n  }\n\n  /**\n   * updates the config file\n   * @param  {string} file  the name of the file to edit\n   * @param  {string} key   the json key to edit\n   * @param  {mixed} value  the value to set for the json object\n   * @return {undefined}    no return\n   */\n  updateJson = (file, key, value) => {\n\n    let oldConf;\n\n    // open the file\n    fs.readFile(file, 'utf8', (error, data) => {\n      if (error) {\n        console.error(error);\n      }\n\n      // set the temp object\n      let oldConf = JSON.parse(data);\n\n      if (oldConf[key]) {\n        oldConf[key] = value;\n      } else {\n        console.error(\"couldn\\'t find key\");\n      }\n\n      let write = JSON.stringify(oldConf);\n\n      fs.writeFile(file, write, 'utf8', error => {\n        if (error) {\n          return console.error(error);\n        } else {\n          console.log(`updated ${file}`);\n        }\n      });\n    });\n  }\n\n  ls = () => {\n    fs.readdirSync(__dirname).forEach(file => {\n      console.log(file);\n    });\n  }\n\n}\n\nexport default IO;\n\n\n\n// WEBPACK FOOTER //\n// ./src/IO.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"discord.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"discord.io\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}